\chapter{Introduction}
\label{chapter:introduction}

\section{Motivation}
\label{chapter:motivation}
Since its beginning in the early 1980s, Business Process Management (BPM) has become a large industry and research field. Starting with Business Process Re-engineering (BPR), a radical approach to align internal business processes along the value chain of a company, many subsequent modeling techniques were developed. \\
With the release of Business Process Model and Notation (BPMN) in the early 2000s, a step towards automated process execution has been taken. Since the initial release, BPMN has been examined thoroughly which lead to several positive and negative conclusions. The lack of flexibility for processes that rather require knowledge instead of a strict control flow, only to mention one. For this reason, Case Management Model and Notation (CMMN) was published in 2014. A modeling notation capturing flexible work with focus on knowledge workers and support for run-time adjustment such as planning and skipping tasks, or even adding new ones. \\
Another modeling specification was released in 2015 by the Object Management Group (OMG): the Decision Model and Notation. Where BPMN gets stuck with its vast amount of gateways capturing decisions, DMN becomes relevant by reducing decisions to a single element, the Decision Table. \\
All of the three named modeling techniques contribute to the objective of fully automated process execution and the reduction of routine work. Furthermore, processing data and supporting knowledge-intensive jobs moved to the center of current process modeling and ongoing research. \enlargethispage{1\baselineskip} \newpage

\section{Problem Statement}
\label{chapter:problem_statement}
Business Model and Notation (BPMN) has become a quasi-standard for modeling business processes, logical steps in software-systems or for the alignment of companies along the process chains. BPMN was standardized in 2005 by the Object Management Group (OMG), but had a long list of predecessors including the \textit{Event-driven Process Chain} (EPC), the \textit{Swimlane Visualization}, \textit{Business Process Re-engineering}, to mention only a few. Despite the inheritance of these languages, BPMN is not a fit for all solution. It has positive and negative aspects, which will be discussed in this thesis.\\ 
BPMN works best when it comes to processes that incorporate the \textit{Value Chain Model} by Michael E. Porter \cite{Porter1988}. Every company needs these strict processes to optimize the value chain, for the value creation and to separate the hierarchies between employees and departments. By 2016, however, these processes have been largely automated. For this automation, the BPMN syntax worked very well due to the strict processes that could be automated more or less easily. The next challenge is to implement a process that can help manual workers and deal with data intensive environments. \\
At this point, \textit{Case Management Model and Notation} (CMMN) and \textit{Decision Model and Notation} (DMN) come into play. Both were highly anticipated by people working in modeling departments. This thesis will investigate the benefits of separating the decision logic and case management into these new standards, as well as combining them in a macro model. The weaknesses and strengthens of BPMN, CMMN and DMN will be presented in detail in order to form indicators for when to use which language best. The publication of the two latest standards by the Object Management Group lead to the following research tasks: 

\begin{itemize}
\item Investigation of the new Decision Model and Notation specification published by the Object Management Group, extracting the assets and drawbacks especially concerning the vast modeling of gateways in BPMN. Is DMN the solution to simplify decision-modeling? 
\item Investigation of the Case Management Model and Notation specification by the Object Management Group, particularly how case modeling can be used in a model-driven software development project. 
\item How do CMMN, DMN and BPMN work together in a model-driven software project? Is there a valid possibility to combine all three specifications in one model? Is it possible to improve the process and information flow, readability and eventually implementation of the model by the developer? \enlargethispage{1\baselineskip}  
\end{itemize}

\section{Approach}
\label{chapter:approach}
The intent is to create a guideline for differentiating and combining three modeling languages. The main topics covered are an explanation of the specifications, the main characteristics, a set of tools that identifies each notation and eventually a practical application to show how the guideline works. \\
At first, a background section derived from literature analysis gives an overview of each specification's development up to the recent release of standardization. Followed by a set of process discovery methods derived from a literature review, the reader is instructed on how to aggregate information about processes. Furthermore, the different methodologies are listed with positive and negative aspects, as well as some best practices derived from conference publications. \\
Afterwards, each notation is explained with illustrations, focused on the main characteristics. With the help of the specifications and additional literature, a set of categories and specific terms was constructed aiming at the correct identification of a notation for a given process discovery output. As a consequence, the modeler is able to discover processes and differentiate between the notations. \\
Next, the specifications are examined for technical interfaces to different modeling notations. Along with practical examples, the attributes and references to different notations are shown. Moreover, this part deals with best practices and patterns used to combine different notations. \\
The third chapter is comprised of a practical application to processes taken from the eKultur GmbH. eKultur, as described more detailed in the background chapter, is a software project to digitize the theater production industry. The company has chosen a model-driven development approach with the side effect of generating several process models. After the process discovery phase, the results were used to apply the indicators and check the recommendation system, as well as modeling the processes. A decision-engine was designed to simplify the application of indicators and is presented as well in Chapter \ref{chapter:case_study}. \\
Each model featured in this thesis was created with either \textit{signavio modeler} or \textit{camunda modeler}, relating to either a specific process taken from eKultur GmbH or a certain use case which has an explanation next to it. \newpage

\section{Contributions}
\label{chapter:contributions}
Since the release of CMMN in 2014 and DMN in 2015, recent publications deal with their realization in platforms and the proof of concept, e.g. \cite{KurzSchmidtFleischmannEtAl2015}, \cite{Fish2012}, \cite{OsuszekStanek2015}. Recent publications deal with Case Management or Decision Management on a higher level concept while former publications incorporate a broader research field influencing the notation as well. \\
None of the publications, however, deal with the combination of all three modeling languages or the objective to take process discovery results and examine them for a fitting modeling notation. This thesis contributes to the BPM research field in two ways: as a summary of the current state of these three notations and best practices, as well as a methodology to identify a suitable notation for a given process documentation. 

\section{Organization}
\label{chapter:organization}
Before the actual analysis and creation of the guideline commences in Chapter \ref{chapter:indicators}, Chapter \ref{chapter:background} illustrates the development of the each specification's origins up to the current state. To understand the usage and necessity for each specification, it is important to understand what researchers and people from the corresponding industries motivated to develop a new modeling language. \\
The background part is followed by the compilation of indicators. Each modeling language has a certain domain where it works best. The intent of this thesis is to serve as a guideline to differentiate between and combine the three named modeling languages. As a consequence, the indicators will help analysts with the decision-making process and identify the appropriate modeling language for a given process. \\
In Chapter \ref{chapter:combination}, each specification is examined for interfaces to different modeling techniques, followed by the case study that shows a practical application of the indicators on process models taken from eKultur GmbH. This part also deals with the results found in the case study. \\
In the last chapter, we discuss the indicators and the case study, as well as positive and negative aspects of this thesis. Furthermore, recommendations for future work are provided.